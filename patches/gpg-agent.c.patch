diff --git a/agent/gpg-agent.c b/agent/gpg-agent.c
index 7d1ffc6..b5d5f67 100644
--- a/agent/gpg-agent.c
+++ b/agent/gpg-agent.c
@@ -1895,12 +1895,12 @@ agent_libgcrypt_progress_cb (void *data, const char *what, int printchar,
                              int current, int total)
 {
   struct progress_dispatch_s *dispatch;
-  npth_t mytid = npth_self ();
-
+  npth_t mytid;
+  mytid.__ = npth_self ().__;
   (void)data;
 
   for (dispatch = progress_dispatch_list; dispatch; dispatch = dispatch->next)
-    if (dispatch->ctrl && dispatch->tid == mytid)
+    if (dispatch->ctrl && dispatch->tid.__ == mytid.__)
       break;
   if (dispatch && dispatch->cb)
     dispatch->cb (dispatch->ctrl, what, printchar, current, total);
@@ -1913,10 +1913,11 @@ static void
 unregister_progress_cb (void)
 {
   struct progress_dispatch_s *dispatch;
-  npth_t mytid = npth_self ();
+  npth_t mytid;
+  mytid.__  = npth_self ().__;
 
   for (dispatch = progress_dispatch_list; dispatch; dispatch = dispatch->next)
-    if (dispatch->ctrl && dispatch->tid == mytid)
+    if (dispatch->ctrl && dispatch->tid.__ == mytid.__)
       break;
   if (dispatch)
     {
@@ -1934,12 +1935,13 @@ agent_set_progress_cb (void (*cb)(ctrl_t ctrl, const char *what,
                        ctrl_t ctrl)
 {
   struct progress_dispatch_s *dispatch, *firstfree;
-  npth_t mytid = npth_self ();
+  npth_t mytid; 
+  mytid.__  = npth_self ().__;
 
   firstfree = NULL;
   for (dispatch = progress_dispatch_list; dispatch; dispatch = dispatch->next)
     {
-      if (dispatch->ctrl && dispatch->tid == mytid)
+      if (dispatch->ctrl && dispatch->tid.__ == mytid.__)
         break;
       if (!dispatch->ctrl && !firstfree)
         firstfree = dispatch;
@@ -2848,12 +2850,12 @@ do_start_connection_thread (ctrl_t ctrl)
   agent_init_default_ctrl (ctrl);
   if (opt.verbose > 1 && !DBG_IPC)
     log_info (_("handler 0x%lx for fd %d started\n"),
-              (unsigned long) npth_self(), FD_DBG (ctrl->thread_startup.fd));
+              (unsigned long) npth_self(.__), FD_DBG (ctrl->thread_startup.fd));
 
   start_command_handler (ctrl, GNUPG_INVALID_FD, ctrl->thread_startup.fd);
   if (opt.verbose > 1 && !DBG_IPC)
     log_info (_("handler 0x%lx for fd %d terminated\n"),
-              (unsigned long) npth_self(), FD_DBG (ctrl->thread_startup.fd));
+              (unsigned long) npth_self().__, FD_DBG (ctrl->thread_startup.fd));
 
   agent_deinit_default_ctrl (ctrl);
   xfree (ctrl);
@@ -2871,7 +2873,7 @@ start_connection_thread_std (void *arg)
   if (check_nonce (ctrl, &socket_nonce))
     {
       log_error ("handler 0x%lx nonce check FAILED\n",
-                 (unsigned long) npth_self());
+                 (unsigned long) npth_self().__);
       return NULL;
     }
 
@@ -2888,7 +2890,7 @@ start_connection_thread_extra (void *arg)
   if (check_nonce (ctrl, &socket_nonce_extra))
     {
       log_error ("handler 0x%lx nonce check FAILED\n",
-                 (unsigned long) npth_self());
+                 (unsigned long) npth_self().__);
       return NULL;
     }
 
@@ -2906,7 +2908,7 @@ start_connection_thread_browser (void *arg)
   if (check_nonce (ctrl, &socket_nonce_browser))
     {
       log_error ("handler 0x%lx nonce check FAILED\n",
-                 (unsigned long) npth_self());
+                 (unsigned long) npth_self().__);
       return NULL;
     }
 
@@ -2928,12 +2930,12 @@ start_connection_thread_ssh (void *arg)
   agent_init_default_ctrl (ctrl);
   if (opt.verbose)
     log_info (_("ssh handler 0x%lx for fd %d started\n"),
-              (unsigned long) npth_self(), FD_DBG (ctrl->thread_startup.fd));
+              (unsigned long) npth_self().__, FD_DBG (ctrl->thread_startup.fd));
 
   start_command_handler_ssh (ctrl, ctrl->thread_startup.fd);
   if (opt.verbose)
     log_info (_("ssh handler 0x%lx for fd %d terminated\n"),
-              (unsigned long) npth_self(), FD_DBG (ctrl->thread_startup.fd));
+              (unsigned long) npth_self().__, FD_DBG (ctrl->thread_startup.fd));
 
   agent_deinit_default_ctrl (ctrl);
   xfree (ctrl);
