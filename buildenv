# bump: gpg-version /GPG_VERSION="(.*)"/ https://gnupg.org/ftp/gcrypt/gnupg/|re:/gnupg-([\d.]+).tar.bz2/$1/|semver:*
GPG_VERSION="2.5.9"

export ZOPEN_STABLE_URL="https://gnupg.org/ftp/gcrypt/gnupg/gnupg-${GPG_VERSION}.tar.bz2"
export ZOPEN_CATEGORIES="security"
export ZOPEN_STABLE_DEPS="make bzip2 tar curl perl automake autoconf m4 sed gettext zoslib diffutils libgpgerror npth libgcrypt libksba libassuan texinfo pinentry ncurses ntbtls zlib zip openssl openssh"
export ZOPEN_BUILD_LINE="STABLE"
export ZOPEN_COMP=CLANG
GPG_TTY=$(tty)
export GPG_TTY
export ZOPEN_CHECK_OPTS="-i check"
export ZOPEN_RUNTIME_DEPS="pinentry" 
export ZOPEN_EXTRA_CPPFLAGS="-D_POSIX_REALTIME_SIGNALS -I\${ZLIB_HOME}/include"
export ZOPEN_EXTRA_CONFIGURE_OPTS="--with-zlib=\${ZLIB_HOME} --with-npth-prefix=\${NPTH_HOME}"
export ZOPEN_EXTRA_LDFLAGS="-L\${ZLIB_HOME}/lib"
export ZOPEN_EXTRA_LIBS="${ZOPEN_EXTRA_LIBS} -lz"
export _EDC_SIG_DFLT=1
export ZOPEN_INSTALL="zopen_install"

zopen_check_results()
{
  dir="$1"
  pfx="$2"
  chk="$1/$2_check.log"
  failures=$(egrep "^FAIL:" $chk | wc -l) 
  skipped=$(egrep "^SKIP:" $chk | wc -l)
  passed=$(egrep "^PASS:" $chk | wc -l)
  totalTests=$(($failures+$skipped+$passed))

  # Echo the following information to gauge build health
cat <<ZZ
actualFailures:${failures}
totalTests:${totalTests}
expectedFailures:9
ZZ
}

zopen_append_to_env()
{
  # echo envars outside of PATH, MANPATH, LIBPATH
cat <<ZZ
  export GNUPG_BUILDDIR="\${PWD}"
  if [ ! -z "\$ZOPEN_IN_ZOPEN_BUILD" ]; then
     export GPG_TTY=$(tty)  
  fi
ZZ
}

zopen_install()
{
  make "$@"
  # Ensure the target directory exists
  mkdir -p "$ZOPEN_INSTALL_DIR/etc/gnupg"
  
 # Create dirmngr.conf with desired content
 cat > "$ZOPEN_INSTALL_DIR/etc/gnupg/dirmngr.conf" <<EOF 
standard-resolver
 no-use-tor
 nameserver 1.1.1.1
EOF
}

zopen_get_version()
{
  echo "${GPG_VERSION}"
}

zopen_append_to_zoslib_env() {
 cat <<EOF
ASCII_TERMINFO|set|PROJECT_ROOT/../../ncurses/ncurses/share/terminfo/
_ENCODE_FILE_NEW|unset|
EOF
}
